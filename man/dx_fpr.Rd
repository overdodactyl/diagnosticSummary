% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dx_metrics.R
\name{dx_fpr}
\alias{dx_fpr}
\title{Calculate False Positive Rate (FPR)}
\usage{
dx_fpr(cm, detail = "full", ...)
}
\arguments{
\item{cm}{A dx_cm object created by \code{\link{dx_cm}}.}

\item{detail}{Character specifying the level of detail in the output:
"simple" for raw estimate, "full" for detailed estimate
including 95\% confidence intervals.}

\item{...}{Additional arguments to pass to metric_binomial function, such as
`citype` for type of confidence interval method.}
}
\description{
Calculates the False Positive Rate (FPR), which is the proportion of actual negatives
that were incorrectly identified as positives by the classifier. FPR is also known
as the fall-out rate and is crucial in evaluating the specificity of a classifier.
}
\details{
FPR is particularly important in contexts where false alarms are costly. It is
used alongside True Negative Rate (specificity) to understand the classifier's
ability to correctly identify negative instances. A lower FPR indicates a classifier
that is better at correctly identifying negatives and not alarming false positives.

The formula for FPR is:
\deqn{FPR = \frac{False Positives}{False Positives + True Negatives}}{FPR = FP / (FP + TN)}
}
\examples{
cm <- dx_cm(dx_heart_failure$predicted, dx_heart_failure$truth, threshold =
            0.5, poslabel = 1)
simple_fpr <- dx_fpr(cm, detail = "simple")
detailed_fpr <- dx_fpr(cm)
print(simple_fpr)
print(detailed_fpr)
}
\seealso{
\code{\link{dx_cm}} to understand how to create and interact with a
         'dx_cm' object.
}
\concept{metrics}
