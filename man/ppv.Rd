% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dx_metrics.R
\name{ppv}
\alias{ppv}
\alias{dx_ppv}
\alias{dx_precision}
\title{Calculate Positive Predictive Value (PPV, Precision)}
\usage{
dx_ppv(cm, detail = "full", ...)

dx_precision(cm, detail = "full", ...)
}
\arguments{
\item{cm}{A dx_cm object created by \code{\link[=dx_cm]{dx_cm()}}.}

\item{detail}{Character specifying the level of detail in the output:
"simple" for raw estimate, "full" for detailed estimate
including 95\% confidence intervals.}

\item{...}{Additional arguments to pass to metric_binomial function, such as
\code{citype} for type of confidence interval method.}
}
\value{
Depending on the \code{detail} parameter, returns a numeric value
representing the calculated metric or a data frame/tibble with
detailed diagnostics including confidence intervals and possibly other
metrics relevant to understanding the metric.
}
\description{
Calculates the proportion of true positives out of the total predicted positives
(true positives + false positives).  PPV is also known as precision.Note that
PPV can be influenced by the prevalence of the condition and should be used
alongside other metrics.
}
\details{
PPV, also known as precision, is the ratio of true positives to the sum of true
and false positives. It reflects the classifier's ability to identify only
relevant instances. However, like accuracy, it may not be suitable for unbalanced
datasets. For detailed diagnostics, including confidence intervals, specify detail = "full".

The formula for PPV is:
\deqn{PPV = \frac{True Positives}{True Positives + False Positives}}{PPV = TP / (TP + FP)}
}
\examples{
cm <- dx_cm(dx_heart_failure$predicted, dx_heart_failure$truth,
  threshold =
    0.5, poslabel = 1
)
simple_ppv <- dx_ppv(cm, detail = "simple")
detailed_ppv <- dx_ppv(cm)
print(simple_ppv)
print(detailed_ppv)
}
\seealso{
\code{\link[=dx_cm]{dx_cm()}} to understand how to create and interact with a
'dx_cm' object.
}
\concept{metrics}
