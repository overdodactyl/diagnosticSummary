% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dx_metrics.R
\name{dx_markedness}
\alias{dx_markedness}
\title{Calculate Markedness}
\usage{
dx_markedness(cm, detail = "full", boot = FALSE, bootreps = 1000)
}
\arguments{
\item{cm}{A dx_cm object created by \code{\link{dx_cm}}.}

\item{detail}{Character specifying the level of detail in the output:
"simple" for raw estimate, "full" for detailed estimate
including 95\% confidence intervals.}

\item{boot}{Logical specifying if confidence intervals should be generated
via bootstrapping.  Note, this can be slow.}

\item{bootreps}{The number of bootstrap replications for calculating confidence intervals.}
}
\description{
Calculates Markedness for the provided confusion matrix. Markedness is a combined measure
of PPV (Positive Predictive Value) and NPV (Negative Predictive Value). It reflects the
effectiveness of a classifier in marking class labels correctly, ranging from -1 to 1.
}
\details{
Markedness is defined as \code{Markedness = PPV + NPV - 1}. It is the sum of the proportions
of predicted positives that are true positives (PPV) and the proportion of predicted negatives
that are true negatives (NPV) minus one. It's a useful measure when you want to consider both
the positive and negative predictive values of a test. A higher markedness indicates better performance.

The formula for Markedness is:
\deqn{Markedness = PPV + NPV - 1}{Markedness = PPV + NPV - 1}
}
\examples{
cm <- dx_cm(dx_heart_failure$predicted, dx_heart_failure$truth, threshold = 0.5, poslabel = 1)
simple_markedness <- dx_markedness(cm)
detailed_markedness <- dx_markedness(cm, detail = "full")
print(simple_markedness)
print(detailed_markedness)
}
\seealso{
\code{\link{dx_cm}} to understand how to create and interact with a 'dx_cm' object.

\code{\link{dx_ppv}}, \code{\link{dx_npv}} for components of markedness.
}
\concept{metrics}
